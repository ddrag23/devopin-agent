name: Build Devopin Agent Installer

on:
  push:
    tags: ["v*"]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML requests psutil pyinstaller

      - name: Run tests
        run: |
          python -m pytest tests/ || echo "No tests found, skipping"

      - name: Build binary with PyInstaller
        run: |
          echo "Building Devopin Agent binary..."
          pyinstaller devopin-agent.spec

          # Verify build success
          if [ ! -f "dist/devopin-agent" ]; then
            echo "‚ùå Build failed: devopin-agent binary not found"
            exit 1
          fi

          echo "‚úÖ Build successful: $(ls -la dist/devopin-agent)"

      - name: Create installer package
        run: |
          echo "Creating installer package..."
          mkdir -p dist/installer
          cp dist/devopin-agent dist/installer/devopin-agent
          cp config.yaml dist/installer/config.yaml.example

          # Copy additional files if they exist
          [ -f LICENSE ] && cp LICENSE dist/installer/ || echo "# License" > dist/installer/LICENSE
          [ -f README.md ] && cp README.md dist/installer/ || echo "# Devopin Agent" > dist/installer/README.md

          echo "‚úÖ Installer package created"

      - name: Create systemd service file
        run: |
          echo "Creating systemd service file..."
          cat > dist/installer/devopin-agent.service << 'EOF'
          [Unit]
          Description=Devopin System Monitoring Agent
          After=network.target
          Wants=network.target

          [Service]
          Type=simple
          User=devopin
          Group=devopin
          WorkingDirectory=/opt/devopin-agent
          ExecStart=/opt/devopin-agent/devopin-agent
          Restart=always
          RestartSec=10
          StandardOutput=journal
          StandardError=journal
          SyslogIdentifier=devopin-agent

          # Security settings
          NoNewPrivileges=true
          PrivateTmp=true
          ProtectSystem=strict
          ProtectHome=true
          ReadWritePaths=/opt/devopin-agent /var/log/devopin /etc/devopin /run/devopin-agent /var/lib/devopin-agent

          [Install]
          WantedBy=multi-user.target
          EOF

          echo "‚úÖ Systemd service file created"

      - name: Create install script
        run: |
          echo "Creating install script..."
          cat > dist/installer/install.sh << 'EOF'
          #!/bin/bash
          set -e

          echo "üöÄ Installing Devopin Agent..."

          # Check if running as root
          if [ "$EUID" -ne 0 ]; then
              echo "‚ùå Please run as root (use sudo)"
              exit 1
          fi

          # Create devopin user and group
          if ! id -u devopin >/dev/null 2>&1; then
              echo "üë§ Creating devopin user..."
              useradd -r -s /bin/false -d /opt/devopin-agent -c "Devopin Agent" devopin
          fi

          # Create directories
          echo "üìÅ Creating directories..."
          mkdir -p /opt/devopin-agent
          mkdir -p /etc/devopin
          mkdir -p /var/log/devopin
          mkdir -p /run/devopin-agent
          mkdir -p /var/lib/devopin-agent/offsets

          # Copy binary
          echo "üì¶ Installing binary..."
          cp devopin-agent /opt/devopin-agent/
          chmod +x /opt/devopin-agent/devopin-agent

          # Copy config if not exists
          if [ ! -f /etc/devopin/config.yaml ]; then
              echo "‚öôÔ∏è  Installing default configuration..."
              cp config.yaml.example /etc/devopin/config.yaml
              # Update paths for production
              sed -i 's|"/tmp/devopin-agent.sock"|"/run/devopin-agent/devopin-agent.sock"|' /etc/devopin/config.yaml
              sed -i 's|".offsets"|"/var/lib/devopin-agent/offsets"|' /etc/devopin/config.yaml
          else
              echo "‚öôÔ∏è  Configuration already exists, skipping..."
          fi
          
          # Set permissions
          echo "üîê Setting permissions..."
          chown -R devopin:devopin /opt/devopin-agent
          chown -R devopin:devopin /var/log/devopin
          chown -R devopin:devopin /run/devopin-agent
          chown -R devopin:devopin /var/lib/devopin-agent
          chown devopin:devopin /etc/devopin/config.yaml
          chmod 640 /etc/devopin/config.yaml
          chmod 755 /var/lib/devopin-agent
          chmod 755 /var/lib/devopin-agent/offsets

          # Install systemd service
          echo "üîß Installing systemd service..."
          cp devopin-agent.service /etc/systemd/system/
          systemctl daemon-reload
          systemctl enable devopin-agent

          # Start service
          echo "üöÄ Starting Devopin Agent..."
          systemctl start devopin-agent

          echo ""
          echo "‚úÖ Installation completed successfully!"
          echo ""
          echo "üìä Service status:"
          systemctl status devopin-agent --no-pager
          echo ""
          echo "üìù Configuration file: /etc/devopin/config.yaml"
          echo "üìã Log files: /var/log/devopin/"
          echo "üîå Socket: /run/devopin-agent/devopin-agent.sock"
          echo ""
          echo "üí° Useful commands:"
          echo "   View logs: sudo journalctl -u devopin-agent -f"
          echo "   Restart:   sudo systemctl restart devopin-agent"
          echo "   Stop:      sudo systemctl stop devopin-agent"
          echo "   Status:    sudo systemctl status devopin-agent"
          EOF

          chmod +x dist/installer/install.sh
          echo "‚úÖ Install script created"

      - name: Create uninstall script
        run: |
          echo "Creating uninstall script..."
          cat > dist/installer/uninstall.sh << 'EOF'
          #!/bin/bash
          set -e

          echo "üóëÔ∏è  Uninstalling Devopin Agent..."

          # Check if running as root
          if [ "$EUID" -ne 0 ]; then
              echo "‚ùå Please run as root (use sudo)"
              exit 1
          fi

          # Stop and disable service
          echo "‚èπÔ∏è  Stopping service..."
          systemctl stop devopin-agent || true
          systemctl disable devopin-agent || true

          # Remove systemd service
          echo "üîß Removing systemd service..."
          rm -f /etc/systemd/system/devopin-agent.service
          systemctl daemon-reload

          # Remove application files
          echo "üìÅ Removing application files..."
          rm -rf /opt/devopin-agent
          rm -rf /var/log/devopin
          rm -rf /run/devopin-agent
          rm -rf /var/lib/devopin-agent

          # Ask about config removal
          read -p "‚ùì Remove configuration files? (y/N): " -n 1 -r
          echo
          if [[ $REPLY =~ ^[Yy]$ ]]; then
              rm -rf /etc/devopin
              echo "‚úÖ Configuration files removed."
          else
              echo "üìù Configuration files kept in /etc/devopin/"
          fi

          # Ask about user removal
          read -p "‚ùì Remove devopin user? (y/N): " -n 1 -r
          echo
          if [[ $REPLY =~ ^[Yy]$ ]]; then
              userdel devopin || true
              echo "‚úÖ User devopin removed."
          else
              echo "üë§ User devopin kept."
          fi

          echo ""
          echo "‚úÖ Uninstallation completed!"
          EOF

          chmod +x dist/installer/uninstall.sh
          echo "‚úÖ Uninstall script created"

      - name: Create archive
        run: |
          echo "üì¶ Creating installer archive..."
          cd dist
          tar -czf devopin-agent-installer.tar.gz installer/

          # Verify archive
          echo "‚úÖ Archive created: $(ls -la devopin-agent-installer.tar.gz)"
          echo "üìã Archive contents:"
          tar -tzf devopin-agent-installer.tar.gz

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: devopin-agent-installer
          path: dist/devopin-agent-installer.tar.gz

      # Get version from tag
      - name: Get version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      # üîß ACTUAL RELEASE CREATION (This was missing!)
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          name: Devopin Agent ${{ steps.version.outputs.VERSION }}
          tag_name: ${{ steps.version.outputs.VERSION }}
          body: |
            ## üîç Devopin Monitoring Agent ${{ steps.version.outputs.VERSION }}

            A lightweight system monitoring agent that collects logs, system metrics, and service status.

            ### üì• Quick Installation
            ```bash
            wget https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.VERSION }}/devopin-agent-installer.tar.gz
            tar -xzf devopin-agent-installer.tar.gz
            cd installer
            sudo ./install.sh
            ```

            ### üì¶ What's Included
            - `devopin-agent` - Monitoring agent binary
            - `install.sh` - Automated installer script
            - `uninstall.sh` - Uninstaller script
            - `devopin-agent.service` - Systemd service file
            - `config.yaml.example` - Configuration template
            - `README.md` - Documentation

            ### üîß After Installation
            - **Service status:** `sudo systemctl status devopin-agent`
            - **View logs:** `sudo journalctl -u devopin-agent -f`
            - **Configuration:** `/etc/devopin/config.yaml`
            - **Socket:** `/run/devopin-agent/devopin-agent.sock`

            ### üñ•Ô∏è System Requirements
            - Linux x64 (Ubuntu 18.04+, CentOS 7+, Debian 9+)
            - Root/sudo access for installation
            - Network access to Devopin backend

            ### üîÑ Management Commands
            ```bash
            # Start/stop service
            sudo systemctl start devopin-agent
            sudo systemctl stop devopin-agent
            sudo systemctl restart devopin-agent

            # View status and logs
            sudo systemctl status devopin-agent
            sudo journalctl -u devopin-agent -f

            # Uninstall
            sudo ./uninstall.sh
            ```

            Built with ‚ù§Ô∏è by the Devopin team
          files: dist/devopin-agent-installer.tar.gz
          draft: false
          prerelease: ${{ contains(steps.version.outputs.VERSION, 'beta') || contains(steps.version.outputs.VERSION, 'alpha') || contains(steps.version.outputs.VERSION, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Cleanup
      - name: Cleanup
        run: rm -rf dist/
